// <auto-generated />
using System;
using Magazine.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Magazine.Migrations
{
    [DbContext(typeof(MagazineContext))]
    [Migration("20221028203756_InitDB")]
    partial class InitDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Magazine.Models.MagazineHead", b =>
                {
                    b.Property<int>("MagazineHeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MagazineHeadId"), 1L, 1);

                    b.Property<string>("Background")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ButtonColor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FontColor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SaleTagColor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("MagazineHeadId");

                    b.ToTable("MagazineHead");
                });

            modelBuilder.Entity("Magazine.Models.MagazineItem", b =>
                {
                    b.Property<int>("MagazineItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MagazineItemId"), 1L, 1);

                    b.Property<decimal>("ItemDiscountAmount")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("ItemDiscountPercentage")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("ItemDiscountedPrice")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("ItemDisplayName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ItemDisplayOrder")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("ItemImage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("ItemMaximumOrderQty")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("ItemSalesPrice")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("MagazineHeadId")
                        .HasColumnType("int");

                    b.Property<int>("MagazineSectionId")
                        .HasColumnType("int");

                    b.HasKey("MagazineItemId");

                    b.HasIndex("MagazineHeadId");

                    b.HasIndex("MagazineSectionId");

                    b.ToTable("MagazineItems");
                });

            modelBuilder.Entity("Magazine.Models.MagazinePayment", b =>
                {
                    b.Property<int>("MagazinePaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MagazinePaymentId"), 1L, 1);

                    b.Property<int>("MagazineHeadId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentIcon")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PaymentName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("MagazinePaymentId");

                    b.HasIndex("MagazineHeadId");

                    b.ToTable("MagazinePayment");
                });

            modelBuilder.Entity("Magazine.Models.MagazineSection", b =>
                {
                    b.Property<int>("MagazineSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MagazineSectionId"), 1L, 1);

                    b.Property<int>("MagazineHeadId")
                        .HasColumnType("int");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Section_Banner")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Section_Display")
                        .HasColumnType("int");

                    b.HasKey("MagazineSectionId");

                    b.HasIndex("MagazineHeadId");

                    b.ToTable("MagazineSection");
                });

            modelBuilder.Entity("Magazine.Models.MagazineSlider", b =>
                {
                    b.Property<int>("MagazineSliderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MagazineSliderId"), 1L, 1);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MagazineHeadId")
                        .HasColumnType("int");

                    b.HasKey("MagazineSliderId");

                    b.HasIndex("MagazineHeadId");

                    b.ToTable("MagazineSlider");
                });

            modelBuilder.Entity("Magazine.Models.MagazineItem", b =>
                {
                    b.HasOne("Magazine.Models.MagazineHead", "MagazineHead")
                        .WithMany("MagazineItems")
                        .HasForeignKey("MagazineHeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Magazine.Models.MagazineSection", "MagazineSection")
                        .WithMany("MagazineItems")
                        .HasForeignKey("MagazineSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MagazineHead");

                    b.Navigation("MagazineSection");
                });

            modelBuilder.Entity("Magazine.Models.MagazinePayment", b =>
                {
                    b.HasOne("Magazine.Models.MagazineHead", "MagazineHead")
                        .WithMany("MagazinePayments")
                        .HasForeignKey("MagazineHeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MagazineHead");
                });

            modelBuilder.Entity("Magazine.Models.MagazineSection", b =>
                {
                    b.HasOne("Magazine.Models.MagazineHead", "MagazineHead")
                        .WithMany("MagazineSections")
                        .HasForeignKey("MagazineHeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MagazineHead");
                });

            modelBuilder.Entity("Magazine.Models.MagazineSlider", b =>
                {
                    b.HasOne("Magazine.Models.MagazineHead", "MagazineHead")
                        .WithMany("MagazineSliders")
                        .HasForeignKey("MagazineHeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MagazineHead");
                });

            modelBuilder.Entity("Magazine.Models.MagazineHead", b =>
                {
                    b.Navigation("MagazineItems");

                    b.Navigation("MagazinePayments");

                    b.Navigation("MagazineSections");

                    b.Navigation("MagazineSliders");
                });

            modelBuilder.Entity("Magazine.Models.MagazineSection", b =>
                {
                    b.Navigation("MagazineItems");
                });
#pragma warning restore 612, 618
        }
    }
}
